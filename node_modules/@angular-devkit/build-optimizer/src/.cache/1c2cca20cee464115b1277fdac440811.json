{"remainingRequest":"/home/wandah/MEGA/Projects/pnt-m/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/wandah/MEGA/Projects/pnt-m/node_modules/ngx-device-detector/ngx-device-detector.umd.js","dependencies":[{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/ngx-device-detector/ngx-device-detector.umd.js","mtime":1526642727000},{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/cache-loader/dist/cjs.js","mtime":1527149216846},{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :\n        typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :\n            (factory((global['ngx-device-detector'] = {}), global.core, global.common));\n}(this, (function (exports, core, common) {\n    'use strict';\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    /**\n     * Created by ahsanayaz on 08/11/2016.\n     */\n    var BROWSERS = {\n        CHROME: 'chrome',\n        FIREFOX: 'firefox',\n        SAFARI: 'safari',\n        OPERA: 'opera',\n        IE: 'ie',\n        MS_EDGE: 'ms-edge',\n        FB_MESSANGER: 'fb-messanger',\n        UNKNOWN: 'unknown'\n    };\n    var DEVICES = {\n        ANDROID: 'android',\n        I_PAD: 'ipad',\n        IPHONE: 'iphone',\n        I_POD: 'ipod',\n        BLACKBERRY: 'blackberry',\n        FIREFOX_OS: 'firefox-os',\n        CHROME_BOOK: 'chrome-book',\n        WINDOWS_PHONE: 'windows-phone',\n        PS4: 'ps4',\n        VITA: 'vita',\n        CHROMECAST: 'chromecast',\n        APPLE_TV: 'apple-tv',\n        GOOGLE_TV: 'google-tv',\n        UNKNOWN: 'unknown'\n    };\n    var OS = {\n        WINDOWS: 'windows',\n        MAC: 'mac',\n        IOS: 'ios',\n        ANDROID: 'android',\n        LINUX: 'linux',\n        UNIX: 'unix',\n        FIREFOX_OS: 'firefox-os',\n        CHROME_OS: 'chrome-os',\n        WINDOWS_PHONE: 'windows-phone',\n        UNKNOWN: 'unknown'\n    };\n    var OS_VERSIONS = {\n        WINDOWS_3_11: 'windows-3-11',\n        WINDOWS_95: 'windows-95',\n        WINDOWS_ME: 'windows-me',\n        WINDOWS_98: 'windows-98',\n        WINDOWS_CE: 'windows-ce',\n        WINDOWS_2000: 'windows-2000',\n        WINDOWS_XP: 'windows-xp',\n        WINDOWS_SERVER_2003: 'windows-server-2003',\n        WINDOWS_VISTA: 'windows-vista',\n        WINDOWS_7: 'windows-7',\n        WINDOWS_8_1: 'windows-8-1',\n        WINDOWS_8: 'windows-8',\n        WINDOWS_10: 'windows-10',\n        WINDOWS_PHONE_7_5: 'windows-phone-7-5',\n        WINDOWS_PHONE_8_1: 'windows-phone-8-1',\n        WINDOWS_PHONE_10: 'windows-phone-10',\n        WINDOWS_NT_4_0: 'windows-nt-4-0',\n        MACOSX_15: 'mac-os-x-15',\n        MACOSX_14: 'mac-os-x-14',\n        MACOSX_13: 'mac-os-x-13',\n        MACOSX_12: 'mac-os-x-12',\n        MACOSX_11: 'mac-os-x-11',\n        MACOSX_10: 'mac-os-x-10',\n        MACOSX_9: 'mac-os-x-9',\n        MACOSX_8: 'mac-os-x-8',\n        MACOSX_7: 'mac-os-x-7',\n        MACOSX_6: 'mac-os-x-6',\n        MACOSX_5: 'mac-os-x-5',\n        MACOSX_4: 'mac-os-x-4',\n        MACOSX_3: 'mac-os-x-3',\n        MACOSX_2: 'mac-os-x-2',\n        MACOSX: 'mac-os-x',\n        UNKNOWN: 'unknown'\n    };\n    var OS_RE = {\n        WINDOWS: { and: [{ or: [/\\bWindows|(Win\\d\\d)\\b/, /\\bWin 9x\\b/] }, { not: /\\bWindows Phone\\b/ }] },\n        MAC: { and: [/\\bMac OS\\b/, { not: /Windows Phone/ }] },\n        IOS: { and: [{ or: [/\\biPad\\b/, /\\biPhone\\b/, /\\biPod\\b/] }, { not: /Windows Phone/ }] },\n        ANDROID: { and: [/\\bAndroid\\b/, { not: /Windows Phone/ }] },\n        LINUX: /\\bLinux\\b/,\n        UNIX: /\\bUNIX\\b/,\n        FIREFOX_OS: { and: [/\\bFirefox\\b/, /Mobile\\b/] },\n        CHROME_OS: /\\bCrOS\\b/,\n        WINDOWS_PHONE: { or: [/\\bIEMobile\\b/, /\\bWindows Phone\\b/] },\n        PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n        VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/\n    };\n    var BROWSERS_RE = {\n        CHROME: { and: [{ or: [/\\bChrome\\b/, /\\bCriOS\\b/] }, { not: { or: [/\\bOPR\\b/, /\\bEdge\\b/] } }] },\n        FIREFOX: /\\bFirefox\\b/,\n        SAFARI: { and: [/^((?!CriOS).)*\\Safari\\b.*$/, { not: { or: [/\\bOPR\\b/, /\\bEdge\\b/, /Windows Phone/] } }] },\n        OPERA: { or: [/Opera\\b/, /\\bOPR\\b/] },\n        IE: { or: [/\\bMSIE\\b/, /\\bTrident\\b/, /^Mozilla\\/5\\.0 \\(Windows NT 10\\.0; Win64; x64\\)$/] },\n        MS_EDGE: { or: [/\\bEdge\\b/] },\n        PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n        VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/,\n        FB_MESSANGER: /\\bFBAN\\/MessengerForiOS\\b/\n    };\n    var DEVICES_RE = {\n        ANDROID: { and: [/\\bAndroid\\b/, { not: /Windows Phone/ }] },\n        I_PAD: /\\biPad\\b/,\n        IPHONE: { and: [/\\biPhone\\b/, { not: /Windows Phone/ }] },\n        I_POD: /\\biPod\\b/,\n        BLACKBERRY: /\\bblackberry\\b/,\n        FIREFOX_OS: { and: [/\\bFirefox\\b/, /\\bMobile\\b/] },\n        CHROME_BOOK: /\\bCrOS\\b/,\n        WINDOWS_PHONE: { or: [/\\bIEMobile\\b/, /\\bWindows Phone\\b/] },\n        PS4: /\\bMozilla\\/5.0 \\(PlayStation 4\\b/,\n        CHROMECAST: /\\bCrKey\\b/,\n        APPLE_TV: /^iTunes-AppleTV\\/4.1$/,\n        GOOGLE_TV: /\\bGoogleTV\\b/,\n        VITA: /\\bMozilla\\/5.0 \\(Play(S|s)tation Vita\\b/\n    };\n    var OS_VERSIONS_RE = {\n        WINDOWS_3_11: /Win16/,\n        WINDOWS_95: /(Windows 95|Win95|Windows_95)/,\n        WINDOWS_ME: /(Win 9x 4.90|Windows ME)/,\n        WINDOWS_98: /(Windows 98|Win98)/,\n        WINDOWS_CE: /Windows CE/,\n        WINDOWS_2000: /(Windows NT 5.0|Windows 2000)/,\n        WINDOWS_XP: /(Windows NT 5.1|Windows XP)/,\n        WINDOWS_SERVER_2003: /Windows NT 5.2/,\n        WINDOWS_VISTA: /Windows NT 6.0/,\n        WINDOWS_7: /(Windows 7|Windows NT 6.1)/,\n        WINDOWS_8_1: /(Windows 8.1|Windows NT 6.3)/,\n        WINDOWS_8: /(Windows 8|Windows NT 6.2)/,\n        WINDOWS_10: /(Windows NT 10.0)/,\n        WINDOWS_PHONE_7_5: /(Windows Phone OS 7.5)/,\n        WINDOWS_PHONE_8_1: /(Windows Phone 8.1)/,\n        WINDOWS_PHONE_10: /(Windows Phone 10)/,\n        WINDOWS_NT_4_0: { and: [/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/, { not: /Windows NT 10.0/ }] },\n        MACOSX: /(MAC OS X\\s*[^ 0-9])/,\n        MACOSX_3: /(Darwin 10.3|Mac OS X 10.3)/,\n        MACOSX_4: /(Darwin 10.4|Mac OS X 10.4)/,\n        MACOSX_5: /(Mac OS X 10.5)/,\n        MACOSX_6: /(Mac OS X 10.6)/,\n        MACOSX_7: /(Mac OS X 10.7)/,\n        MACOSX_8: /(Mac OS X 10.8)/,\n        MACOSX_9: /(Mac OS X 10.9)/,\n        MACOSX_10: /(Mac OS X 10.10)/,\n        MACOSX_11: /(Mac OS X 10.11)/,\n        MACOSX_12: /(Mac OS X 10.12)/,\n        MACOSX_13: /(Mac OS X 10.13)/,\n        MACOSX_14: /(Mac OS X 10.14)/,\n        MACOSX_15: /(Mac OS X 10.15)/\n    };\n    var BROWSER_VERSIONS_RE_MAP = {\n        CHROME: [/\\bChrome\\/([\\d\\.]+)\\b/, /\\bCriOS\\/([\\d\\.]+)\\b/],\n        FIREFOX: /\\bFirefox\\/([\\d\\.]+)\\b/,\n        SAFARI: /\\bVersion\\/([\\d\\.]+)\\b/,\n        OPERA: [/\\bVersion\\/([\\d\\.]+)\\b/, /\\bOPR\\/([\\d\\.]+)\\b/],\n        IE: [/\\bMSIE ([\\d\\.]+\\w?)\\b/, /\\brv:([\\d\\.]+\\w?)\\b/],\n        MS_EDGE: /\\bEdge\\/([\\d\\.]+)\\b/\n    };\n    var BROWSER_VERSIONS_RE = Object.keys(BROWSER_VERSIONS_RE_MAP).reduce(function (obj, key) {\n        obj[BROWSERS[key]] = BROWSER_VERSIONS_RE_MAP[key];\n        return obj;\n    }, {});\n    var Constants = Object.freeze({\n        BROWSERS: BROWSERS,\n        DEVICES: DEVICES,\n        OS: OS,\n        OS_VERSIONS: OS_VERSIONS,\n        OS_RE: OS_RE,\n        BROWSERS_RE: BROWSERS_RE,\n        DEVICES_RE: DEVICES_RE,\n        OS_VERSIONS_RE: OS_VERSIONS_RE,\n        BROWSER_VERSIONS_RE_MAP: BROWSER_VERSIONS_RE_MAP,\n        BROWSER_VERSIONS_RE: BROWSER_VERSIONS_RE\n    });\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    /**\n     * Created by ahsanayaz on 08/11/2016.\n     */\n    var ReTree = /*@__PURE__*/ (function () {\n        function ReTree() {\n        }\n        /**\n         * @param {?} string\n         * @param {?} regex\n         * @return {?}\n         */\n        ReTree.prototype.test = /**\n         * @param {?} string\n         * @param {?} regex\n         * @return {?}\n         */\n            function (string, regex) {\n                var /** @type {?} */ self = this;\n                if (typeof regex === 'string') {\n                    regex = new RegExp(regex);\n                }\n                if (regex instanceof RegExp) {\n                    return regex.test(string);\n                }\n                else if (regex && Array.isArray(regex.and)) {\n                    return regex.and.every(function (item) {\n                        return self.test(string, item);\n                    });\n                }\n                else if (regex && Array.isArray(regex.or)) {\n                    return regex.or.some(function (item) {\n                        return self.test(string, item);\n                    });\n                }\n                else if (regex && regex.not) {\n                    return !self.test(string, regex.not);\n                }\n                else {\n                    return false;\n                }\n            };\n        /**\n         * @param {?} string\n         * @param {?} regex\n         * @return {?}\n         */\n        ReTree.prototype.exec = /**\n         * @param {?} string\n         * @param {?} regex\n         * @return {?}\n         */\n            function (string, regex) {\n                var /** @type {?} */ self = this;\n                if (typeof regex === 'string') {\n                    regex = new RegExp(regex);\n                }\n                if (regex instanceof RegExp) {\n                    return regex.exec(string);\n                }\n                else if (regex && Array.isArray(regex)) {\n                    return regex.reduce(function (res, item) {\n                        return (!!res) ? res : self.exec(string, item);\n                    }, null);\n                }\n                else {\n                    return null;\n                }\n            };\n        return ReTree;\n    }());\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    /**\n     * @record\n     */\n    var DeviceDetectorService = /*@__PURE__*/ (function () {\n        function DeviceDetectorService(platformId) {\n            this.platformId = platformId;\n            this.ua = '';\n            this.userAgent = '';\n            this.os = '';\n            this.browser = '';\n            this.device = '';\n            this.os_version = '';\n            this.browser_version = '';\n            if (common.isPlatformBrowser(this.platformId)) {\n                this.ua = window.navigator.userAgent;\n            }\n            this._setDeviceInfo();\n        }\n        /**\n         * @author Ahsan Ayaz\n         * @desc Sets the initial value of the device when the service is initiated.\n         * This value is later accessible for usage\n         * @return {?}\n         */\n        DeviceDetectorService.prototype._setDeviceInfo = /**\n         * @author Ahsan Ayaz\n         * @desc Sets the initial value of the device when the service is initiated.\n         * This value is later accessible for usage\n         * @return {?}\n         */\n            function () {\n                var _this = this;\n                var /** @type {?} */ reTree = new ReTree();\n                var /** @type {?} */ ua = this.ua;\n                this.userAgent = ua;\n                var /** @type {?} */ mappings = [\n                    { const: 'OS', prop: 'os' },\n                    { const: 'BROWSERS', prop: 'browser' },\n                    { const: 'DEVICES', prop: 'device' },\n                    { const: 'OS_VERSIONS', prop: 'os_version' },\n                ];\n                mappings.forEach(function (mapping) {\n                    _this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce(function (obj, item) {\n                        obj[Constants[mapping.const][item]] = reTree.test(ua, Constants[mapping.const + \"_RE\"][item]);\n                        return obj;\n                    }, {});\n                });\n                mappings.forEach(function (mapping) {\n                    _this[mapping.prop] = Object.keys(Constants[mapping.const])\n                        .map(function (key) {\n                        return Constants[mapping.const][key];\n                    }).reduce(function (previousValue, currentValue) {\n                        return (previousValue === Constants[mapping.const].UNKNOWN && _this[mapping.prop][currentValue])\n                            ? currentValue : previousValue;\n                    }, Constants[mapping.const].UNKNOWN);\n                });\n                this.browser_version = '0';\n                if (this.browser !== BROWSERS.UNKNOWN) {\n                    var /** @type {?} */ re = BROWSER_VERSIONS_RE[this.browser];\n                    var /** @type {?} */ res = reTree.exec(ua, re);\n                    if (!!res) {\n                        this.browser_version = res[1];\n                    }\n                }\n            };\n        /**\n         * @author Ahsan Ayaz\n         * @desc Returns the device information\n         * @return {?} the device information object.\n         */\n        DeviceDetectorService.prototype.getDeviceInfo = /**\n         * @author Ahsan Ayaz\n         * @desc Returns the device information\n         * @return {?} the device information object.\n         */\n            function () {\n                var /** @type {?} */ deviceInfo = {\n                    userAgent: this.userAgent,\n                    os: this.os,\n                    browser: this.browser,\n                    device: this.device,\n                    os_version: this.os_version,\n                    browser_version: this.browser_version\n                };\n                return deviceInfo;\n            };\n        /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the mobile devices to check\n         * if the current device is a mobile.\n         * @return {?} whether the current device is a mobile\n         */\n        DeviceDetectorService.prototype.isMobile = /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the mobile devices to check\n         * if the current device is a mobile.\n         * @return {?} whether the current device is a mobile\n         */\n            function () {\n                var _this = this;\n                return [\n                    DEVICES.ANDROID,\n                    DEVICES.IPHONE,\n                    DEVICES.I_POD,\n                    DEVICES.BLACKBERRY,\n                    DEVICES.FIREFOX_OS,\n                    DEVICES.WINDOWS_PHONE,\n                    DEVICES.VITA\n                ].some(function (item) {\n                    return _this.device === item;\n                });\n            };\n        /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the tablet devices to check\n         * if the current device is a tablet.\n         * @return {?} whether the current device is a tablet\n         */\n        DeviceDetectorService.prototype.isTablet = /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the tablet devices to check\n         * if the current device is a tablet.\n         * @return {?} whether the current device is a tablet\n         */\n            function () {\n                var _this = this;\n                return [\n                    DEVICES.I_PAD,\n                    DEVICES.FIREFOX_OS\n                ].some(function (item) {\n                    return _this.device === item;\n                });\n            };\n        /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the desktop devices to check\n         * if the current device is a desktop device.\n         * @return {?} whether the current device is a desktop device\n         */\n        DeviceDetectorService.prototype.isDesktop = /**\n         * @author Ahsan Ayaz\n         * @desc Compares the current device info with the desktop devices to check\n         * if the current device is a desktop device.\n         * @return {?} whether the current device is a desktop device\n         */\n            function () {\n                var _this = this;\n                return [\n                    DEVICES.PS4,\n                    DEVICES.CHROME_BOOK,\n                    DEVICES.UNKNOWN\n                ].some(function (item) {\n                    return _this.device === item;\n                });\n            };\n        DeviceDetectorService.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DeviceDetectorService.ctorParameters = function () {\n            return [\n                { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] },] },\n            ];\n        };\n        return DeviceDetectorService;\n    }());\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var DeviceDetectorModule = /*@__PURE__*/ (function () {\n        function DeviceDetectorModule() {\n        }\n        /**\n         * @return {?}\n         */\n        DeviceDetectorModule.forRoot = /**\n         * @return {?}\n         */\n            function () {\n                return {\n                    ngModule: DeviceDetectorModule,\n                    providers: [DeviceDetectorService]\n                };\n            };\n        DeviceDetectorModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule\n                        ]\n                    },] },\n        ];\n        return DeviceDetectorModule;\n    }());\n    exports.DeviceDetectorModule = DeviceDetectorModule;\n    exports.DeviceDetectorService = DeviceDetectorService;\n    exports.ReTree = ReTree;\n    exports.BROWSERS = BROWSERS;\n    exports.DEVICES = DEVICES;\n    exports.OS = OS;\n    exports.OS_VERSIONS = OS_VERSIONS;\n    exports.OS_RE = OS_RE;\n    exports.BROWSERS_RE = BROWSERS_RE;\n    exports.DEVICES_RE = DEVICES_RE;\n    exports.OS_VERSIONS_RE = OS_VERSIONS_RE;\n    exports.BROWSER_VERSIONS_RE_MAP = BROWSER_VERSIONS_RE_MAP;\n    exports.BROWSER_VERSIONS_RE = BROWSER_VERSIONS_RE;\n    Object.defineProperty(exports, '__esModule', { value: true });\n})));\n",null]}