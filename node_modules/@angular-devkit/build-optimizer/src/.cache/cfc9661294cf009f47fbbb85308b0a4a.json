{"remainingRequest":"/home/wandah/MEGA/Projects/pnt-m/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/wandah/MEGA/Projects/pnt-m/node_modules/angular5-social-login/angular5-social-login.umd.js","dependencies":[{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/angular5-social-login/angular5-social-login.umd.js","mtime":1512445363000},{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/cache-loader/dist/cjs.js","mtime":1527149216846},{"path":"/home/wandah/MEGA/Projects/pnt-m/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs/BehaviorSubject')) :\n        typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', 'rxjs/BehaviorSubject'], factory) :\n            (factory((global['angular5-social-login'] = {}), global.core, global.common, global.BehaviorSubject));\n}(this, (function (exports, core, common, BehaviorSubject) {\n    'use strict';\n    var AuthServiceConfig = /*@__PURE__*/ (function () {\n        /**\n         * @param {?} providers\n         */\n        function AuthServiceConfig(providers) {\n            this.providers = new Map();\n            for (var i = 0; i < providers.length; i++) {\n                var element = providers[i];\n                this.providers.set(element.id, element.provider);\n            }\n        }\n        return AuthServiceConfig;\n    }());\n    var AuthService = /*@__PURE__*/ (function () {\n        /**\n         * @param {?} config\n         */\n        function AuthService(config) {\n            var _this = this;\n            this._user = null;\n            this._authState = new BehaviorSubject.BehaviorSubject(null);\n            this.providers = config.providers;\n            this.providers.forEach(function (provider, key) {\n                provider.initialize().then(function (user) {\n                    user.provider = key;\n                    _this._user = user;\n                    _this._authState.next(user);\n                }).catch(function (err) {\n                    // this._authState.next(null);\n                });\n            });\n        }\n        Object.defineProperty(AuthService.prototype, \"authState\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._authState.asObservable();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} providerId\n         * @return {?}\n         */\n        AuthService.prototype.signIn = function (providerId) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                var /** @type {?} */ providerObject = _this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject.signIn().then(function (user) {\n                        user.provider = providerId;\n                        resolve(user);\n                        _this._user = user;\n                        _this._authState.next(user);\n                    });\n                }\n                else {\n                    reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n                }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        AuthService.prototype.signOut = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                if (_this._user && _this._user.provider) {\n                    var /** @type {?} */ providerId = _this._user.provider;\n                    var /** @type {?} */ providerObject = _this.providers.get(providerId);\n                    providerObject.signOut().then(function () {\n                        _this._user = null;\n                        _this._authState.next(null);\n                        resolve();\n                    }).catch(function (err) {\n                        _this._authState.next(null);\n                    });\n                }\n                else {\n                    reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n                }\n            });\n        };\n        return AuthService;\n    }());\n    AuthService.LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\n    AuthService.decorators = [\n        { type: core.Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    AuthService.ctorParameters = function () {\n        return [\n            { type: AuthServiceConfig, },\n        ];\n    };\n    var SocialLoginModule = /*@__PURE__*/ (function () {\n        function SocialLoginModule() {\n        }\n        return SocialLoginModule;\n    }());\n    SocialLoginModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        common.CommonModule\n                    ],\n                    providers: [\n                        AuthService\n                    ]\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    SocialLoginModule.ctorParameters = function () { return []; };\n    var SocialUser = /*@__PURE__*/ (function () {\n        function SocialUser() {\n        }\n        return SocialUser;\n    }());\n    var LoginProviderClass = /*@__PURE__*/ (function () {\n        function LoginProviderClass() {\n        }\n        return LoginProviderClass;\n    }());\n    var LinkedInResponse = /*@__PURE__*/ (function () {\n        function LinkedInResponse() {\n        }\n        return LinkedInResponse;\n    }());\n    /**\n     * @abstract\n     */\n    var BaseLoginProvider = /*@__PURE__*/ (function () {\n        function BaseLoginProvider() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        BaseLoginProvider.prototype.initialize = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        BaseLoginProvider.prototype.signIn = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        BaseLoginProvider.prototype.signOut = function () { };\n        /**\n         * @param {?} obj\n         * @param {?} onload\n         * @return {?}\n         */\n        BaseLoginProvider.prototype.loadScript = function (obj, onload) {\n            if (document.getElementById(obj.name)) {\n                return;\n            }\n            var /** @type {?} */ signInJS = document.createElement('script');\n            signInJS.async = true;\n            signInJS.src = obj.url;\n            signInJS.onload = onload;\n            if (obj.name === 'LINKEDIN') {\n                signInJS.async = false;\n                signInJS.text = ('api_key: ' + obj.id).replace('\\'', '');\n            }\n            document.head.appendChild(signInJS);\n        };\n        return BaseLoginProvider;\n    }());\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var GoogleLoginProvider = /*@__PURE__*/ (function (_super) {\n        __extends(GoogleLoginProvider, _super);\n        /**\n         * @param {?} clientId\n         */\n        function GoogleLoginProvider(clientId) {\n            var _this = _super.call(this) || this;\n            _this.clientId = clientId;\n            _this.loginProviderObj = new LoginProviderClass();\n            _this.loginProviderObj.id = clientId;\n            _this.loginProviderObj.name = 'google';\n            _this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        GoogleLoginProvider.prototype.initialize = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this.loadScript(_this.loginProviderObj, function () {\n                    gapi.load('auth2', function () {\n                        _this.auth2 = gapi.auth2.init({\n                            client_id: _this.clientId,\n                            scope: 'email'\n                        });\n                        _this.auth2.then(function () {\n                            if (_this.auth2.isSignedIn.get()) {\n                                resolve(_this.drawUser());\n                            }\n                        });\n                    });\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        GoogleLoginProvider.prototype.drawUser = function () {\n            var /** @type {?} */ user = new SocialUser();\n            var /** @type {?} */ profile = this.auth2.currentUser.get().getBasicProfile();\n            var /** @type {?} */ authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);\n            user.id = profile.getId();\n            user.name = profile.getName();\n            user.email = profile.getEmail();\n            user.image = profile.getImageUrl();\n            user.token = authResponseObj.access_token;\n            user.idToken = authResponseObj.id_token;\n            return user;\n        };\n        /**\n         * @return {?}\n         */\n        GoogleLoginProvider.prototype.signIn = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                var /** @type {?} */ promise = _this.auth2.signIn();\n                promise.then(function () {\n                    resolve(_this.drawUser());\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        GoogleLoginProvider.prototype.signOut = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this.auth2.signOut().then(function (err) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            });\n        };\n        return GoogleLoginProvider;\n    }(BaseLoginProvider));\n    GoogleLoginProvider.PROVIDER_ID = 'google';\n    var __extends$1 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var FacebookLoginProvider = (function (_super) {\n        __extends$1(FacebookLoginProvider, _super);\n        /**\n         * @param {?} clientId\n         */\n        function FacebookLoginProvider(clientId) {\n            var _this = _super.call(this) || this;\n            _this.clientId = clientId;\n            _this.loginProviderObj = new LoginProviderClass();\n            _this.loginProviderObj.id = clientId;\n            _this.loginProviderObj.name = 'facebook';\n            _this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        FacebookLoginProvider.prototype.initialize = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this.loadScript(_this.loginProviderObj, function () {\n                    FB.init({\n                        appId: _this.clientId,\n                        autoLogAppEvents: true,\n                        cookie: true,\n                        xfbml: true,\n                        version: 'v2.10'\n                    });\n                    FB.AppEvents.logPageView();\n                    FB.getLoginStatus(function (response) {\n                        if (response.status === 'connected') {\n                            var /** @type {?} */ accessToken_1 = FB.getAuthResponse()['accessToken'];\n                            FB.api('/me?fields=name,email,picture', function (res) {\n                                resolve(FacebookLoginProvider.drawUser(Object.assign({}, { token: accessToken_1 }, res)));\n                            });\n                        }\n                    });\n                });\n            });\n        };\n        /**\n         * @param {?} response\n         * @return {?}\n         */\n        FacebookLoginProvider.drawUser = function (response) {\n            var /** @type {?} */ user = new SocialUser();\n            user.id = response.id;\n            user.name = response.name;\n            user.email = response.email;\n            user.token = response.token;\n            user.image = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';\n            return user;\n        };\n        /**\n         * @return {?}\n         */\n        FacebookLoginProvider.prototype.signIn = function () {\n            return new Promise(function (resolve, reject) {\n                FB.login(function (response) {\n                    if (response.authResponse) {\n                        var /** @type {?} */ accessToken_2 = FB.getAuthResponse()['accessToken'];\n                        FB.api('/me?fields=name,email,picture', function (res) {\n                            resolve(FacebookLoginProvider.drawUser(Object.assign({}, { token: accessToken_2 }, res)));\n                        });\n                    }\n                }, { scope: 'email,public_profile' });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        FacebookLoginProvider.prototype.signOut = function () {\n            return new Promise(function (resolve, reject) {\n                FB.logout(function (response) {\n                    resolve();\n                });\n            });\n        };\n        return FacebookLoginProvider;\n    }(BaseLoginProvider));\n    FacebookLoginProvider.PROVIDER_ID = 'facebook';\n    var __extends$2 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var LinkedinLoginProvider = (function (_super) {\n        __extends$2(LinkedinLoginProvider, _super);\n        /**\n         * @param {?} clientId\n         */\n        function LinkedinLoginProvider(clientId) {\n            var _this = _super.call(this) || this;\n            _this.clientId = clientId;\n            _this.loginProviderObj = new LoginProviderClass();\n            _this.loginProviderObj.id = clientId;\n            _this.loginProviderObj.name = 'linkedin';\n            _this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        LinkedinLoginProvider.prototype.initialize = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this.loadScript(_this.loginProviderObj, function () {\n                    IN.init({\n                        api_key: _this.clientId,\n                        authorize: true,\n                        onLoad: _this.onLinkedInLoad()\n                    });\n                    IN.Event.on(IN, 'auth', function () {\n                        if (IN.User.isAuthorized()) {\n                            IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result(function (res) {\n                                resolve(_this.drawUser(res));\n                            });\n                        }\n                    });\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        LinkedinLoginProvider.prototype.onLinkedInLoad = function () {\n            IN.Event.on(IN, 'systemReady', function () {\n                IN.User.refresh();\n            });\n        };\n        /**\n         * @param {?} response\n         * @return {?}\n         */\n        LinkedinLoginProvider.prototype.drawUser = function (response) {\n            var /** @type {?} */ user = new SocialUser();\n            user.id = response.emailAddress;\n            user.name = response.firstName + ' ' + response.lastName;\n            user.email = response.emailAddress;\n            user.image = response.pictureUrl;\n            user.token = IN.ENV.auth.oauth_token;\n            return user;\n        };\n        /**\n         * @return {?}\n         */\n        LinkedinLoginProvider.prototype.signIn = function () {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                IN.User.authorize(function () {\n                    IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result(function (res) {\n                        resolve(_this.drawUser(res));\n                    });\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        LinkedinLoginProvider.prototype.signOut = function () {\n            return new Promise(function (resolve, reject) {\n                IN.User.logout(function (response) {\n                    resolve();\n                }, function (err) {\n                    reject(err);\n                });\n            });\n        };\n        return LinkedinLoginProvider;\n    }(BaseLoginProvider));\n    LinkedinLoginProvider.PROVIDER_ID = 'linkedin';\n    exports.SocialLoginModule = SocialLoginModule;\n    exports.AuthService = AuthService;\n    exports.AuthServiceConfig = AuthServiceConfig;\n    exports.SocialUser = SocialUser;\n    exports.LoginProviderClass = LoginProviderClass;\n    exports.LinkedInResponse = LinkedInResponse;\n    exports.FacebookLoginProvider = FacebookLoginProvider;\n    exports.GoogleLoginProvider = GoogleLoginProvider;\n    exports.LinkedinLoginProvider = LinkedinLoginProvider;\n    Object.defineProperty(exports, '__esModule', { value: true });\n})));\n",null]}